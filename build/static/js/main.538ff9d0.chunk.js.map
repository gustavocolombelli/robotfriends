{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBondry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","console","log","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAkBeA,EAhBF,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAEzB,OACI,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cAErB,gCACI,6BAAKF,IACL,4BAAIC,WCaLK,EApBE,SAAC,GAAe,IAAbC,EAAY,EAAZA,OAEhB,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CAEIR,GAAKK,EAAOG,GAAGR,GACfF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCMlBC,EAfG,SAAC,GAA+B,EAA9BC,YAA+B,IAAlBC,EAAiB,EAAjBA,aAE7B,OACI,qBAAKV,UAAU,KAAf,SACA,uBACCA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAYH,OCANI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAU,SAAUC,OAAO,kBAAmBC,OAAQ,SAAnE,SACKJ,EAAMK,YCmBJC,E,kDArBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAO,CACRC,UAAU,GAHA,E,qDAOlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG9B,WAEI,OAAGG,KAAKJ,MAAMC,SACH,0DAEJG,KAAKX,MAAMK,a,GAjBCQ,aC6DZC,G,wDAnDX,aAAc,IAAD,8BACT,gBAgBJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SAhBzC,EAAKZ,MAAQ,CACTlB,OAAS,GACT4B,YAAa,IAEjBG,QAAQC,IAAI,eANH,E,qDASb,WAAoB,IAAD,OACfC,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAO,EAAKd,SAAS,CAAEvB,OAAQqC,OAE9CN,QAAQC,IAAI,uB,oBAQhB,WAAS,IAAD,EAC2BV,KAAKJ,MAA5BlB,EADJ,EACIA,OAAQ4B,EADZ,EACYA,YACVU,EAAiBtC,EAAOuC,QAAO,SAAAC,GACjC,OAAOA,EAAM/C,KAAKgD,cAAcC,SAASd,EAAYa,kBAGzD,OADAV,QAAQC,IAAI,WACRhC,EAAO2C,QAKPZ,QAAQC,IAAIhC,EAAO2C,QAEnB,gCAEI,oBAAI/C,UAAU,SAAd,yBACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU1B,OAAQsC,aAZ9BP,QAAQC,IAAIhC,EAAO2C,QACZ,oBAAI/C,UAAU,QAAd,6B,GAhCD4B,cCEHoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACK,cAAC,EAAD,MAELC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.538ff9d0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) =>{\r\n    \r\n    return(\r\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n            \r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        \r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Card;","import React from 'react'; \r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) =>{\r\n\r\n    return (\r\n        <div>\r\n             { \r\n                robots.map((user, i) => {\r\n                    return (\r\n                        <Card \r\n                            key={i}\r\n                            id={ robots[i].id}\r\n                            name={robots[i].name}\r\n                            email={robots[i].email}\r\n                        />\r\n                    )\r\n                })\r\n             }   \r\n         </div>\r\n    )\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchField, searchChange}) =>{\r\n\r\n    return (\r\n        <div className='tc'>\r\n        <input \r\n         className='pa3 ba b--green bg-lightest-blue'\r\n         type='search'\r\n         placeholder='Search robots'\r\n         onChange = {searchChange}\r\n         />\r\n         </div>\r\n    );\r\n\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) =>{\r\n    return(\r\n        <div style={{overflowY:'scroll', border:'5px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Scroll;","import React, { Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({ hasError: true })\r\n    }\r\n\r\n    render(){\r\n\r\n        if(this.state.hasError){\r\n            return <h1>Oooops. That is not good</h1>\r\n        }\r\n        return this.props.children;\r\n    }\r\n\r\n}\r\n\r\nexport default ErrorBoundry;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport {robots} from '../robots';\r\nimport SearchBox from '../components/SearchBox.js';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBondry';\r\nimport './App.css';\r\n\r\n\r\n\r\nclass App extends Component{\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots : [],\r\n            searchfield: '' \r\n        }\r\n        console.log('constructor')\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users    => this.setState({ robots: users}));\r\n        \r\n        console.log('componentDidMount')\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value})\r\n    }\r\n\r\n\r\n    render(){\r\n        const { robots, searchfield} = this.state;\r\n        const filteredRobots = robots.filter(robot=>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        })\r\n        console.log('Render ')\r\n        if(!robots.length){\r\n            console.log(robots.length);\r\n            return <h1 className='f1 tc'>Loaging...</h1>\r\n        }\r\n        else{\r\n            console.log(robots.length)\r\n            return(\r\n            <div>\r\n                \r\n                <h1 className=' f1 tc'>RoboFriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                    <ErrorBoundry>\r\n                        <CardList robots={filteredRobots}/>\r\n                    </ErrorBoundry>\r\n                </Scroll>\r\n            </div>\r\n            );\r\n        \r\n         };\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n       <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}